# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "zfs" ];
  boot.zfs.forceImportRoot = false;
  services.zfs.autoScrub.enable = true;

  networking.hostId = "86d47e87";

  hardware.amdgpu.opencl.enable = true;

  environment.systemPackages = with pkgs; [
    radeontop
  ];
  
  services.hardware.openrgb.enable = true;
  systemd.services.openrgb-client = {
    enable = true;
    description = "load openrgb profile";
    preStart = "sleep 20s";
    serviceConfig = {
      User = "jacob";
      Group = "users";
      ExecStart = "${pkgs.openrgb}/bin/openrgb -p off";
      Type = "oneshot";
    };
    wantedBy = [ "multi-user.target" ];
    after = [ "openrgb.service" ];

  };

    


  fileSystems."/" =
    { device = "/dev/disk/by-uuid/10e3627a-8736-49b0-a958-f66b9fc93986";
      fsType = "btrfs";
      options = [ "compress-force=zstd" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4454-7F6E";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/media" = {
    device = "tank";
    fsType = "zfs";
  };

  swapDevices = [ ];

  

  # Disable wifi on boot
  systemd.services."disable-wifi-on-boot" = {
    restartIfChanged = false;
		description = "Disable wifi on boot via nmcli";
		after = [ "NetworkManager.service" ];
		wantedBy = [ "multi-user.target" ];
		serviceConfig = {
			ExecStart = "${pkgs.networkmanager}/bin/nmcli radio wifi off";
			Type = "oneshot";
      RemainAfterExit = "true";
		};
	};


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
